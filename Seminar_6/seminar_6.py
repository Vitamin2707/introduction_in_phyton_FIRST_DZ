"""
Вспомните какие модули вы уже проходили на курсе.
Создайте файл, в котором вы импортируете встроенные в модуль функции под псевдонимами. (3-7 строк импорта)
"""
# from sys import argv
from random import randint
# from time import sleep as stop_at
# from sys import path as file_path
# from csv import reader as read_csv
# from decimal import Decimal as dc

"""
Создайте модуль с функцией внутри. 
Функция принимает на вход три целых числа: нижнюю и верхнюю границу и количество попыток. 
Внутри генерируется случайное число в указанных границах и пользователь должен угадать его за заданное число попыток. 
Функция выводит подсказки “больше” и “меньше”. 
Если число угадано, возвращается истина, а если попытки исчерпаны - ложь.
"""


def binary_random_search(minimum: int, maximum: int, count: int) -> bool:
    num = randint(minimum, maximum + 1)
    search_num = None
    while search_num != num:
        search_num = int(input("Угадайте число: "))
        print([["Загаданное число меньше", "Загаданное число больше"][search_num < num], "Угадали!"][search_num == num])
        count -= 1
        if count == 0:
            print("Попытки закончились")
            return False
    return True


"""
Улучшаем задачу 2. 
Добавьте возможность запуска функции “угадайки” из модуля в командной строке терминала. 
Строка должна принимать от 1 до 3 аргументов: параметры вызова функции. 
Для преобразования строковых аргументов командной строки в числовые параметры используйте генераторное выражение
"""


"""
Создайте модуль с функцией внутри. 
Функция получает на вход загадку, список с возможными вариантами отгадок и количество попыток на угадывание.
Программа возвращает номер попытки, с которой была отгадана загадка или ноль, если попытки исчерпаны
"""